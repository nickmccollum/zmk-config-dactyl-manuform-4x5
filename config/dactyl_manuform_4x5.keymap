#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
  behaviors {
    skq: sticky_key_quick_release {
		compatible = "zmk,behavior-sticky-key";
		label = "STICKY_KEY_QUICK_RELEASE";
		#binding-cells = <1>;
		bindings = <&kp>;
		release-after-ms = <500>;
		quick-release;
    };
	pht: positional_hold_tap {
		compatible = "zmk,behavior-hold-tap";
		label = "POSITIONAL_HOLD_TAP";
		#binding-cells = <2>;
		flavor = "hold-preferred";
		tapping-term-ms = <200>;
		quick-tap-ms = <200>;
		bindings = <&kp>, <&kp>;
	};
  };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q  &kp W   &kp E  &kp R  &kp T                                  &kp J  &kp L  &kp U     &kp Y   &kp SEMI
                &kp A  &kp S   &kp D  &kp F  &kp G                                  &kp M  &kp N  &kp E     &kp I   &kp O
             &kp LCTRL &kp X   &kp C  &kp V  &kp B                                  &kp K  &kp H  &kp COMMA &kp DOT &kp FSLH
                       &kp Z   &kp GRAVE                                                          &kp MINUS &kp SQT
                                        &kp BSPC  &kp LSHFT                      &skq LSHFT &mo RSE
                                                  &mo RSE   &kp LCMD   &kp LCTRL &kp RET
                                                  &mo LWR   &kp ESC    &kp LGUI  &kp BSPC
            >;
        };

        lower_layer {
            bindings = <
                &trans    &trans    &kp LC(E) &kp CAPS  &kp LC(B)      &kp PG_UP &kp HOME  &kp UP    &kp END   &kp DEL
                &kp LGUI  &kp LALT  &kp LSHFT &kp LCTRL &kp LC(S)      &kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT &kp BSPC
                &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &trans         &kp INS   &trans    &trans    &trans    &trans
                          &trans    &trans                                                 &trans    &trans
                                             &trans &trans                    &trans &mo ADJ
                                                    &trans &trans      &trans &trans
                                                    &trans &trans      &trans &trans
            >;
        };

        raise_layer {
            bindings = <
    &kp AMPS  &kp PRCNT &kp HASH   &kp LPAR  &kp EXCL                      &kp ASTRK &kp RPAR  &kp AT    &kp DLLR  &kp CARET
    &kp N7    &kp N5    &kp N3     &kp N1    &kp N9                        &kp N8    &kp N0    &kp N2    &kp N4    &kp N6
    &kp GRAVE &kp LBKT  &kp RBKT   &kp UNDER &kp EQUAL                     &kp PLUS  &kp MINUS &trans    &trans    &kp BSLH
              &trans    &trans                                                                  &trans    &trans
                                   &mo ADJ  &trans                         &trans    &trans
                                            &trans    &trans       &trans  &trans
                                            &trans    &trans       &trans  &trans
            >;
        };

        adjust_layer {
            bindings = <
    &kp F1        &kp F2       &kp F3       &kp F4        &kp F5                        &kp F6  &kp F7  &kp F8   &kp F9   &kp F10
    &out OUT_BLE  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3                  &kp F11 &none   &none    &none    &none
    &out OUT_USB  &none        &none        &none         &bt BT_SEL 4                  &kp F12 &none   &none    &none    &none 
                  &bt BT_CLR   &none                                                                    &none    &none 
                                      &none     &none                                 &none     &none 
                                                &none     &none             &none     &none 
                                                &none     &none             &none     &none 
            >;
        };
    };
};
